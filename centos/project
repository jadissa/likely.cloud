!/bin/bash
#
# ________                              .____                    .___
# \______ \_______  ____ _____    _____ |    |    ____  __ __  __| _/
#  |    |  \_  __ _/ __ \\__  \  /     \|    |   /  _ \|  |  \/ __ |
#  |    `   |  | \\  ___/ / __ \|  Y Y  |    |__(  <_> |  |  / /_/ |
# /_______  |__|   \___  (____  |__|_|  |_______ \____/|____/\____ |
#         \/           \/     \/      \/        \/                \/
# Automagic LEMP for CentOS

#https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-on-centos-7



#
# Manual configurations
#
GIT_PROJECT=

GITHUB_EMAIL=

CENTOS_USERNAME=

CENTOS_PASSWORD=

DB_PASSWORD=

SERVER_NAME=likely.cloud

WEBROOT=/var/www/html/


#
# Automatic installations
#
. /etc/os-release

ID=$ID

VER=$VERSION_ID

PROJECT_PATH=$WEBROOT$SERVER_NAME

PRIVATE_IP_ADDRESS=`curl -w "\n" http://169.254.169.254/metadata/v1/interfaces/private/0/ipv4/address`

PUBLIC_IP_ADDRESS=`curl http://ipinfo.io/ip`

WORKER_PROCESS=`sudo grep -c 'model name' /proc/cpuinfo`

GROUP_EXISTS=`cat /etc/group | grep $GROUP`

GROUP=www

USER=www

echo '  ________                              .____                    .___'

echo '  \______ \_______  ____ _____    _____ |    |    ____  __ __  __| _/'

echo '   |    |  \_  __ _/ __ \\__  \  /     \|    |   /  _ \|  |  \/ __ | '

echo '   |    `   |  | \\  ___/ / __ \|  Y Y  |    |__(  <_> |  |  / /_/ | '

echo '  /_______  |__|   \___  (____  |__|_|  |_______ \____/|____/\____ | '

echo '          \/           \/     \/      \/        \/                \/ '

echo

echo

echo "Project directory:    $PROJECT_PATH"

echo "Group:                $GROUP"

USER=`whoami`

echo

if [ "$ID" != "centos" ] || [ "$VER" != "7" ]; then

    echo 'CentOS 7 required, exiting...'

    exit 1
fi


sudo mkdir -p $PROJECT_PATH

stat -c "Rights: %A Perms: %a Username:Owner: %U:%G File: %n Type: %F Bytes: %s" $PROJECT_PATH

echo "export PATH=$WEBROOT:$PATH" >>~/.bashrc

source ~/.bashrc


#
#	Get dependencies
#
cd /tmp

sudo yum -y update

sudo yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm

sudo yum-config-manager --enable remi-php72

curl 'https://setup.ius.io/' -o setup-ius.sh

sudo bash setup-ius.sh

sudo yum -y install php71u php71u-cli php71u-common php71u-fpm php71u-gd php71u-mbstring php71u-mysqlnd php71u-opcache php71u-pdo php71u-pear php71u-pecl-igbinary php71u-pecl-memcache php71u-pecl-memcached php71u-process php71u-xml php71u-json wget http-server libicu-dev epel-release policycoreutils-python net-tools git vim mlocate nginx mariadb-server mariadb


#
#	Secure PHP 
#
sudo sed -i.bak -e 's/;cgi\.fix_pathinfo=1/cgi.fix_pathinfo=0/;' /etc/php.ini


#
#	Configure PHP daemon
#
sudo sed -i.bak -e 's/;listen.owner = nobody/listen.owner = nobody/;' /etc/php-fpm.d/www.conf
sudo sed -i.bak -e 's/;listen.group = nobody/listen.group = nobody/;' /etc/php-fpm.d/www.conf
sudo sed -i.bak -e 's/user = apache/user = nginx/;' /etc/php-fpm.d/www.conf
sudo sed -i.bak -e 's/group = apache/group = nginx/;' /etc/php-fpm.d/www.conf


#
#	Start PHP
#
sudo systemctl start php-fpm

sudo systemctl enable php-fpm

sudo systemctl status php-fpm

php-fpm -v


#
#	Configure nginx
#
sudo cat << EOF > /etc/nginx/conf.d/default.conf
server {

    worker_processes  ${WORKER_PROCESS};

    pid               /run/nginx.pid;

    sendfile on;

    tcp_nopush on;

    tcp_nodelay on;

    keepalive_timeout 65;

    types_hash_max_size 2048;

    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;

    error_log /var/log/nginx/error.log;

    gzip on;

    gzip_disable "msie6";

    include /etc/nginx/mime.types;

    listen            80;

    server_name       ${SERVER_NAME};

    root              ${PROJECT_PATH};

    index index.php index.html index.htm;

    location / {

        try_files \$uri \$uri/ =404;

    }

    error_page 404 /404.html;

    error_page 500 502 503 504 /50x.html;

    location = /50x.html {

        root /usr/share/nginx/html;

    }

    location ~ \.php$ {

        try_files \$uri =404;

        fastcgi_pass 127.0.0.1:9000;

        fastcgi_index index.php;

        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;

        include fastcgi_params;

    }

}
EOF


#
#	Start nginx
#
sudo nginx -t

sudo systemctl start nginx

sudo systemctl enable nginx

sudo systemctl status nginx


#
#	Start mariadb
#
sudo systemctl start mariadb

sudo systemctl enable mariadb

sudo systemctl status mariadb


#
#	Secure mariadb
#
#mysql -i "delete from mysql.user where User='root' and Host not in('localhost', '127.0.0.1', '::1')"

mysql -e "drop user ''@'localhost'"

mysql -e "drop user ''@'$(hostname)'"

mysql -e "drop database test"

mysql -e "update mysql.user set Password = password('$DB_PASSWORD') where User = 'root'"

mysql -e "flush privileges"


#
#	Add user
#
sudo adduser $CENTOS_USERNAME

echo $CENTOS_PASSWORD | passwd $CENTOS_USERNAME --stdin

# @todo: give user sudo


#
#	Download dependencies
#
sudo -u $CENTOS_USERNAME ssh-keygen -t rsa -C "$GITHUB_EMAIL" -f /home/$CENTOS_USERNAME/.ssh/id_rsa

chmod 0700 /home/$CENTOS_USERNAME/.ssh/id_rsa

sudo -u $CENTOS_USERNAME ssh-add -K /home/$CENTOS_USERNAME/.ssh/id_rsa

eval "$(ssh-agent -s)"

KEY_RSA=`cat /home/$CENTOS_USERNAME/.ssh/id_rsa.pub`

if [ "$KEY_RSA" == "" ]; then

    echo 'Could not create private key'

    exit

fi

echo $KEY_RSA

sudo -u $CENTOS_USERNAME cd $PROJECT_PATH

sudo -u $CENTOS_USERNAME chmod -R 0755 $PROJECT_PATH

sudo -u $CENTOS_USERNAME git clone $GITHUB_PROJECT

sudo curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer

# @todo: add swap

# @todo: build dependencies

# @todo: make all installations and configurations check if installed/configured before modifying system